use crate::common::*;

ri_maybe_ref! {
    Type = IriRef,
    type_name = "IriRef",
    variable_name = "iri_ref",
    name = "IRI reference",
    indefinite_article = "an",
    description = "An IRI reference, i.e., either a IRI or a relative reference.",
    must_be_ascii = false,
    must_have_scheme = false,
    rfc = 3987,
    abnf_rule = ("IRI-reference", "https://datatracker.ietf.org/doc/html/rfc3987#section-2.2"),
    NonRefType = Iri,
    non_ref_name = "IRI",
    non_ref_link = "https://datatracker.ietf.org/doc/html/rfc3987#section-2.2",
    abnf_rule_absolute = ("absolute-IRI", "https://datatracker.ietf.org/doc/html/rfc3987#section-2.2"),
    has_scheme_equivalent = is_iri,
    as_method = as_iri,
    into_method = into_iri,
    AuthorityType = IAuthority,
    UserinfoEncoderType = IUserinfo,
    RegNameEncoderType = IRegName,
    PathEncoderType = IPath,
    QueryEncoderType = IQuery,
    FragmentEncoderType = IFragment,
}

ri_maybe_ref! {
    Type = Iri,
    type_name = "Iri",
    variable_name = "iri",
    name = "IRI",
    indefinite_article = "an",
    description = "An IRI.",
    must_be_ascii = false,
    must_have_scheme = true,
    rfc = 3987,
    abnf_rule = ("IRI", "https://datatracker.ietf.org/doc/html/rfc3987#section-2.2"),
    RefType = IriRef,
    ref_name = "IRI reference",
    as_method = as_iri_ref,
    into_method = into_iri_ref,
    AuthorityType = IAuthority,
    UserinfoEncoderType = IUserinfo,
    RegNameEncoderType = IRegName,
    PathEncoderType = IPath,
    QueryEncoderType = IQuery,
    FragmentEncoderType = IFragment,
}
